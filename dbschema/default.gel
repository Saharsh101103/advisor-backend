module default {

  scalar type SerialId extending sequence;
  scalar type Role extending enum<STUDENT, ADVISOR>;
  scalar type CourseStatus extending enum<UPCOMING, IN_PROGRESS, COMPLETED>;
  scalar type EventType extending enum<CLASS, ADVISING, DEADLINE>;
  scalar type DegreeStatus extending enum<COMPLETED, IN_PROGRESS, NOT_STARTED>;

  abstract type Object {
    is_deleted: bool {
      default := false;
    }
    created_at: datetime {
      default := std::datetime_of_statement();
      readonly := true;
    }
    updated_at: datetime {
      rewrite insert, update using (std::datetime_of_statement());
    }
  }

  type User extending Object {
    required property serial_id -> SerialId;
    required property name -> str;
    required property email -> str {
      constraint exclusive;
      }
    required property password -> str;
    }

  type Student extending Object {
    required property major -> str;
    required property enrollment_year -> int16;
    required property expected_graduation -> int16;
    required property gpa -> float32;
    required property completed_credits -> int16;
    required property required_credits -> int16;

    # Relations
    required link advisor -> Advisor;
    required link user -> User;
    required role -> Role;
  }

  type Advisor extending Object {
    required property department -> str;
    optional property office -> str;
    optional property office_hours -> str;
    optional property phone -> str;
    required link user -> User;
    required role -> Role;
  }

  type Course extending Object {
    required property serial_id -> SerialId;
    required property code -> str;
    required property title -> str;
    required property credits -> int16;
    required property description -> str;
    multi link prerequisites -> Course;
  }
  
  # Connects student to course with progress + status 
  type Enrollment extending Object {
    required link student -> Student;
    required link course -> Course;
    required status -> CourseStatus {
        default:= "UPCOMING"
      }; 
    property progress -> int16 {
        default:= 0
      }; # percentage 
    required link instructor -> Advisor;
  }

  type Announcement extending Object {
    required property serial_id -> SerialId;
    required property title -> str;
    required property content -> str;
    required property date -> datetime;
    required link author -> User;
  }

  type Event extending Object {
    required property serial_id -> SerialId;
    required property title -> str;
    required property date -> datetime;
    required property time -> str;
    required property type -> EventType;
    required property description -> str;
    optional property location -> str;
  }

  
  type DegreeRequirement extending Object {
    required property serial_id -> SerialId;
    required property major -> str;
    required property total_credits -> int16;
    multi link categories -> RequirementCategory;
  }

  type RequirementCategory extending Object {
    required property serial_id -> SerialId;
    required property name -> str;
    required property required_credits -> int16;
    required property completed_credits -> int16;

    multi link courses : 
      CourseRequirement
    ;
  }

  type CourseRequirement extending Object {
    required property serial_id -> SerialId;
    required link course -> Course;
    required property status -> CourseStatus;
  }

  type AdvisingMeeting extending Object {
    required link student -> Student;
    required link advisor -> Advisor;
    required property date -> datetime;
    required property status -> str {
    # e.g. "SCHEDULED", "COMPLETED", "CANCELLED"
    constraint one_of("SCHEDULED", "COMPLETED", "CANCELLED");
  }
}

}
